openapi: '3.0.2'
info:
  title: Snake
  version: '1.0'
servers:
  - url: http://localhost:3000/v1
tags:
 - name: User
components:
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        fullname:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    scores:
      type: object
      properties:
        id_score:
          type: integer
        id_user:
          type: integer
        puntos:
          type: integer
        fecha:
          type: string
          format: date-time        
paths:
  /users/{id}:
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
    get:
      summary: Obtiene un usuario por id  
      operationId: getUserById
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/user'
    delete:
      summary: Borrar un usuario
      operationId: deleteUser
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/user'
    put:
      description: Modificacion de usuario
      operationId: upateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
               type: object
               properties:
                 username:
                  type: string
                 fullname:
                  type: string
                 email:
                  type: string
                  format: email
                 password:
                  type: string
                  format: password
               
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/user'
  /users:
    get:
      summary: Obtiene el listado de usuarios
      description: Obtener usuarios de la aplicacion Snake
      operationId: getUsers
      requestBody:
        description: Listado de usuarios
        required: true
        content:
          application/json:
            schema:
               type: object
               $ref: '#/components/schemas/user'
      responses:
        '200':
          description: OK
  /users/create:
    post:
      summary: Crear un nuevo usuario
      operationId: createUser
      requestBody:
        description: Creacion de un nuevo usuario
        required: true
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:            
                username:
                  type: string
                fullname:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password  
                   
      responses:
         '200':
          description: created  
      tags:
        - "User"
  /scores:
    get:
      summary: Obtiene el ranking
      description: Obtener ranking del juego
      operationId: getScores
      requestBody:
        description: Ranking de puntos
        required: true
        content:
          application/json:
            schema:
               type: object
               $ref: '#/components/schemas/scores'
      responses:
        '200':
          description: OK
  /scores/{id}:
    parameters:
        - name: id_score
          in: path
          required: true
          schema:
            type: string
    get:
      summary: Obtiene el puntaje por id
      operationId: getScore
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/scores'
  /scores/create:
    post:
      summary: Crear un nuevo puntaje
      operationId: createScore
      requestBody:
        description: Creacion de un nuevo puntaje
        required: true
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties: 
                id_user:
                  type: integer
                puntos:
                  type: integer
                fecha:
                  type: string
                  format: date-time  
                   
      responses:
         '200':
          description: created  